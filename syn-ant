#!/usr/bin/env perl
use strict;
use warnings;

use WordNet::QueryData;
$ENV{WNHOME} = '/usr/local/Cellar/wordnet/3.1/dict/';
my $wn = WordNet::QueryData->new(
    noload => 1,
    dir    => $ENV{WNHOME},
);

my $word  = shift || 'small';
my $pos   = shift || 'a';
my $sense = shift || 1;

$word .= "#$pos#$sense";

my @syns = $wn->querySense( $word, 'syns' );
my @ants = $wn->queryWord( $word, 'ants' );
my @hype = $wn->querySense( $word, 'hypes' );
my @hypo = $wn->querySense( $word, 'hypos' );
my @mero = $wn->querySense( $word, 'mero' );
my @holo = $wn->querySense( $word, 'holo' );
my @sim  = $wn->querySense( $word, 'sim' );
my @enta = $wn->querySense( $word, 'enta' );
my @caus = $wn->querySense( $word, 'caus' );

print "Synsets:\n\t", join( ', ', @syns ), "\n" if @syns;
print "Antonyms:\n\t", join( ', ', @ants ), "\n" if @ants;
print "Hypernyms:\n\t", join( ', ', @hype ), "\n" if @hype;
print "Hyponyms:\n\t", join( ', ', @hypo ), "\n" if @hypo;
print "Meronyms:\n\t", join( ', ', @mero ), "\n" if @mero;
print "Holonyms:\n\t", join( ', ', @holo ), "\n" if @holo;
print "Similar to:\n\t", join( ', ', @sim ), "\n" if @sim;
print "Entailment:\n\t", join( ', ', @enta ), "\n" if @enta;
print "Cause:\n\t", join( ', ', @caus ), "\n" if @caus;
